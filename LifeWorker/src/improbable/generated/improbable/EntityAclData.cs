// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.EntityAclData in improbable/standard_library.schema.

namespace Improbable
{

public partial struct EntityAclData : global::System.IEquatable<EntityAclData>, global::Improbable.Collections.IDeepCopyable<EntityAclData>
{
  /// <summary>
  /// Field read_acl = 1.
  /// </summary>
  public global::Improbable.WorkerRequirementSet readAcl;
  /// <summary>
  /// Field component_write_acl = 2.
  /// </summary>
  public global::Improbable.Collections.Map<uint, global::Improbable.WorkerRequirementSet> componentWriteAcl;

  public EntityAclData(
      global::Improbable.WorkerRequirementSet readAcl,
      global::Improbable.Collections.Map<uint, global::Improbable.WorkerRequirementSet> componentWriteAcl)
  {
    this.readAcl = readAcl;
    this.componentWriteAcl = componentWriteAcl;
  }

  public static EntityAclData Create()
  {
    var _result = new EntityAclData();
    _result.readAcl = global::Improbable.WorkerRequirementSet.Create();
    _result.componentWriteAcl = new global::Improbable.Collections.Map<uint, global::Improbable.WorkerRequirementSet>();
    return _result;
  }

  public EntityAclData DeepCopy()
  {
    var _result = new EntityAclData();
    _result.readAcl = readAcl.DeepCopy();
    _result.componentWriteAcl = componentWriteAcl.DeepCopy();
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is EntityAclData && Equals((EntityAclData) _obj);
  }

  public static bool operator==(EntityAclData a, EntityAclData b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(EntityAclData a, EntityAclData b)
  {
    return !a.Equals(b);
  }

  public bool Equals(EntityAclData _obj)
  {
    return
        readAcl == _obj.readAcl &&
        componentWriteAcl == _obj.componentWriteAcl;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + readAcl.GetHashCode();
    _result = (_result * 977) + (componentWriteAcl == null ? 0 : componentWriteAcl.GetHashCode());
    return _result;
  }
}

public static class EntityAclData_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                           EntityAclData _data, global::Improbable.Worker.CInterop.SchemaObject _obj)
  {
    {
      global::Improbable.WorkerRequirementSet_Internal.Write(_pool, _data.readAcl, _obj.AddObject(1));
    }
    if (_data.componentWriteAcl != null)
    {
      for (var _node = _data.componentWriteAcl.First; _node != null; _node = _node.Next)
      {
        var _pair = _obj.AddObject(2);
        {
          _pair.AddUint32(1, _node.Value.Key);
        }
        {
          global::Improbable.WorkerRequirementSet_Internal.Write(_pool, _node.Value.Value, _pair.AddObject(2));
        }
      }
    }
  }

  public static unsafe EntityAclData Read(global::Improbable.Worker.CInterop.SchemaObject _obj)
  {
    EntityAclData _data;
    {
      _data.readAcl = global::Improbable.WorkerRequirementSet_Internal.Read(_obj.GetObject(1));
    }
    {
      var _count = _obj.GetObjectCount(2);
      _data.componentWriteAcl = new global::Improbable.Collections.Map<uint, global::Improbable.WorkerRequirementSet>((int) _count);
      for (uint _i = 0; _i < _count; ++_i)
      {
        var _pair = _obj.IndexObject(2, _i);
        _data.componentWriteAcl.Add(_pair.GetUint32(1), global::Improbable.WorkerRequirementSet_Internal.Read(_pair.GetObject(2)));
      }
    }
    return _data;
  }
}

}
