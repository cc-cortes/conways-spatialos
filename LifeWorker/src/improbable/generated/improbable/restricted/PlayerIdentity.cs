// Generated by SpatialOS codegen. DO NOT EDIT!
// source: improbable.restricted.PlayerIdentity in improbable/restricted/system_components.schema.

namespace Improbable.Restricted
{

public partial struct PlayerIdentity : global::System.IEquatable<PlayerIdentity>, global::Improbable.Collections.IDeepCopyable<PlayerIdentity>
{
  /// <summary>
  /// Field player_identifier = 1.
  /// </summary>
  public string playerIdentifier;
  /// <summary>
  /// Field provider = 2.
  /// </summary>
  public string provider;
  /// <summary>
  /// Field metadata = 3.
  /// </summary>
  public global::Improbable.Worker.Bytes metadata;

  public PlayerIdentity(
      string playerIdentifier,
      string provider,
      global::Improbable.Worker.Bytes metadata)
  {
    this.playerIdentifier = playerIdentifier;
    this.provider = provider;
    this.metadata = metadata;
  }

  public static PlayerIdentity Create()
  {
    var _result = new PlayerIdentity();
    _result.playerIdentifier = "";
    _result.provider = "";
    _result.metadata = global::Improbable.Worker.Bytes.FromBackingArray(new byte[0]);
    return _result;
  }

  public PlayerIdentity DeepCopy()
  {
    var _result = new PlayerIdentity();
    _result.playerIdentifier = playerIdentifier;
    _result.provider = provider;
    _result.metadata = global::Improbable.Worker.Bytes.CopyOf(metadata.BackingArray);
    return _result;

  }

  public override bool Equals(object _obj)
  {
    return _obj is PlayerIdentity && Equals((PlayerIdentity) _obj);
  }

  public static bool operator==(PlayerIdentity a, PlayerIdentity b)
  {
    return a.Equals(b);
  }

  public static bool operator!=(PlayerIdentity a, PlayerIdentity b)
  {
    return !a.Equals(b);
  }

  public bool Equals(PlayerIdentity _obj)
  {
    return
        playerIdentifier == _obj.playerIdentifier &&
        provider == _obj.provider &&
        metadata == _obj.metadata;
  }

  public override int GetHashCode()
  {
    int _result = 1327;
    _result = (_result * 977) + (playerIdentifier == null ? 0 : playerIdentifier.GetHashCode());
    _result = (_result * 977) + (provider == null ? 0 : provider.GetHashCode());
    _result = (_result * 977) + metadata.GetHashCode();
    return _result;
  }
}

public static class PlayerIdentity_Internal
{
  public static unsafe void Write(global::Improbable.Worker.Internal.GcHandlePool _pool,
                           PlayerIdentity _data, global::Improbable.Worker.CInterop.SchemaObject _obj)
  {
    {
      _obj.AddString(1, _data.playerIdentifier);
    }
    {
      _obj.AddString(2, _data.provider);
    }
    {
      if (_data.metadata.BackingArray != null)
      {
        _obj.AddBytes(3, (byte*) _pool.Pin(_data.metadata.BackingArray), (uint) _data.metadata.Length);
      }
      else
      {
        _obj.AddBytes(3, null, 0);
      }
    }
  }

  public static unsafe PlayerIdentity Read(global::Improbable.Worker.CInterop.SchemaObject _obj)
  {
    PlayerIdentity _data;
    {
      _data.playerIdentifier = _obj.GetString(1);
    }
    {
      _data.provider = _obj.GetString(2);
    }
    {
      _data.metadata = global::Improbable.Worker.Bytes.FromBackingArray(_obj.GetBytes(3));
    }
    return _data;
  }
}

}
